<ComposerBody
  @composer={{this.composer.model}}
  @showPreview={{this.composer.showPreview}}
  @openIfDraft={{this.composer.openIfDraft}}
  @typed={{this.composer.typed}}
  @cancelled={{this.composer.cancelled}}
  @save={{this.composer.saveAction}}
>
  <div class="grippie"></div>
  {{#if this.composer.visible}}
    <ComposerMessages
      @composer={{this.composer.model}}
      @messageCount={{this.composer.messageCount}}
      @addLinkLookup={{this.composer.addLinkLookup}}
    />

    {{#if this.composer.showFullScreenPrompt}}
      <ComposerFullscreenPrompt
        @removeFullScreenExitPrompt={{this.composer.removeFullScreenExitPrompt}}
      />
    {{/if}}

    {{#if this.composer.model.viewOpenOrFullscreen}}
      <div
        role="dialog"
        aria-label={{this.composer.ariaLabel}}
        class="reply-area
          {{if this.composer.canEditTags 'with-tags' 'without-tags'}}
          {{if
            this.composer.hasFormTemplate
            'with-form-template'
            'without-form-template'
          }}
          {{if
            this.composer.model.showCategoryChooser
            'with-category'
            'without-category'
          }}"
      >
        <span class="composer-open-plugin-outlet-container">
          <PluginOutlet
            @name="composer-open"
            @connectorTagName="div"
            @outletArgs={{hash model=this.composer.model}}
          />
        </span>

        <div class="reply-to">
          {{#unless this.composer.model.viewFullscreen}}
            <div class="reply-details">
              <ComposerActionTitle
                @model={{this.composer.model}}
                @canWhisper={{this.composer.canWhisper}}
              />

              <PluginOutlet
                @name="composer-action-after"
                @outletArgs={{hash model=this.composer.model}}
              />

              {{#if this.site.desktopView}}
                {{#if this.composer.model.unlistTopic}}
                  <span class="unlist">({{i18n "composer.unlist"}})</span>
                {{/if}}
                {{#if this.composer.isWhispering}}
                  {{#if this.composer.model.noBump}}
                    <span class="no-bump">{{d-icon "anchor"}}</span>
                  {{/if}}
                {{/if}}
              {{/if}}

              {{#if this.composer.canEdit}}
                <LinkToInput
                  @onClick={{this.composer.displayEditReason}}
                  @showInput={{this.composer.showEditReason}}
                  @icon="info-circle"
                  class="display-edit-reason"
                >
                  <TextField
                    @value={{this.composer.editReason}}
                    @id="edit-reason"
                    @maxlength="255"
                    @placeholderKey="composer.edit_reason_placeholder"
                  />
                </LinkToInput>
              {{/if}}
            </div>
          {{/unless}}

          <PluginOutlet
            @name="before-composer-controls"
            @outletArgs={{hash model=this.composer.model}}
          />

          <ComposerToggles
            @composeState={{this.composer.model.composeState}}
            @showToolbar={{this.composer.showToolbar}}
            @toggleComposer={{this.composer.toggle}}
            @toggleToolbar={{this.composer.toggleToolbar}}
            @toggleFullscreen={{this.composer.fullscreenComposer}}
            @disableTextarea={{this.composer.disableTextarea}}
          />
        </div>

        <ComposerEditor
          @topic={{this.composer.topic}}
          @composer={{this.composer.model}}
          @lastValidatedAt={{this.composer.lastValidatedAt}}
          @canWhisper={{this.composer.canWhisper}}
          @storeToolbarState={{this.composer.storeToolbarState}}
          @onPopupMenuAction={{this.composer.onPopupMenuAction}}
          @showUploadModal={{route-action "showUploadSelector"}}
          @popupMenuOptions={{this.composer.popupMenuOptions}}
          @draftStatus={{this.composer.model.draftStatus}}
          @isUploading={{this.composer.isUploading}}
          @isProcessingUpload={{this.composer.isProcessingUpload}}
          @allowUpload={{this.composer.allowUpload}}
          @uploadIcon={{this.composer.uploadIcon}}
          @isCancellable={{this.composer.isCancellable}}
          @uploadProgress={{this.composer.uploadProgress}}
          @groupsMentioned={{this.composer.groupsMentioned}}
          @cannotSeeMention={{this.composer.cannotSeeMention}}
          @hereMention={{this.composer.hereMention}}
          @importQuote={{this.composer.importQuote}}
          @togglePreview={{this.composer.togglePreview}}
          @processPreview={{this.composer.showPreview}}
          @showToolbar={{this.composer.showToolbar}}
          @afterRefresh={{this.composer.afterRefresh}}
          @focusTarget={{this.composer.focusTarget}}
          @disableTextarea={{this.composer.disableTextarea}}
          @formTemplateIds={{this.composer.formTemplateIds}}
          @formTemplateInitialValues={{this.composer.formTemplateInitialValues}}
          @onSelectFormTemplate={{this.composer.onSelectFormTemplate}}
        >
          <div class="composer-fields">
            <PluginOutlet
              @name="before-composer-fields"
              @outletArgs={{hash model=this.composer.model}}
            />
            {{#unless this.composer.model.viewFullscreen}}
              {{#if this.composer.model.canEditTitle}}
                {{#if this.composer.model.creatingPrivateMessage}}
                  <div class="user-selector">
                    <ComposerUserSelector
                      @topicId={{this.composer.topicModel.id}}
                      @recipients={{this.composer.model.targetRecipients}}
                      @hasGroups={{this.composer.model.hasTargetGroups}}
                      @focusTarget={{this.composer.focusTarget}}
                      class={{concat-class
                        "users-input"
                        (if this.composer.showWarning "can-warn")
                      }}
                    />
                    {{#if this.composer.showWarning}}
                      <label class="add-warning">
                        <Input
                          @type="checkbox"
                          @checked={{this.composer.model.isWarning}}
                        />
                        <span>{{i18n "composer.add_warning"}}</span>
                      </label>
                    {{/if}}
                  </div>
                {{/if}}

                <div
                  class="title-and-category
                    {{if this.composer.showPreview 'with-preview'}}"
                >
                  <ComposerTitle
                    @composer={{this.composer.model}}
                    @lastValidatedAt={{this.composer.lastValidatedAt}}
                    @focusTarget={{this.composer.focusTarget}}
                  />

                  {{#if this.composer.model.showCategoryChooser}}
                    <div class="category-input">
                      <CategoryChooser
                        @value={{this.composer.model.categoryId}}
                        @onChange={{this.composer.updateCategory}}
                        @options={{hash
                          disabled=this.composer.disableCategoryChooser
                          scopedCategoryId=this.composer.scopedCategoryId
                          prioritizedCategoryId=this.composer.prioritizedCategoryId
                        }}
                      />
                      <PluginOutlet
                        @name="after-composer-category-input"
                        @outletArgs={{hash composer=this.composer.model}}
                      />
                      <PopupInputTip
                        @validation={{this.composer.categoryValidation}}
                      />
                    </div>
                  {{/if}}

                  {{#if this.composer.canEditTags}}
                    <MiniTagChooser
                      @value={{this.composer.model.tags}}
                      @onChange={{fn (mut this.composer.model.tags)}}
                      @options={{hash
                        disabled=this.composer.disableTagsChooser
                        categoryId=this.composer.model.categoryId
                        minimum=this.composer.model.minimumRequiredTags
                      }}
                    />
                    <PluginOutlet
                      @name="after-composer-tag-input"
                      @outletArgs={{hash composer=this.composer.model}}
                    />
                    <PopupInputTip
                      @validation={{this.composer.tagValidation}}
                    />
                  {{/if}}

                  <PluginOutlet
                    @name="after-title-and-category"
                    @outletArgs={{hash
                      model=this.composer.model
                      tagValidation=this.composer.tagValidation
                      canEditTags=this.composer.canEditTags
                      disabled=this.composer.disableTagsChooser
                    }}
                  />
                </div>
              {{/if}}

              <span>
                <PluginOutlet
                  @name="composer-fields"
                  @connectorTagName="div"
                  @outletArgs={{hash
                    model=this.composer.model
                    showPreview=this.composer.showPreview
                  }}
                />
              </span>
            {{/unless}}
          </div>
        </ComposerEditor>

        <span>
          <PluginOutlet
            @name="composer-after-composer-editor"
            @outletArgs={{hash model=this.composer.model}}
          />
        </span>

        <div class="submit-panel">
          <span>
            <PluginOutlet
              @name="composer-fields-below"
              @connectorTagName="div"
              @outletArgs={{hash model=this.composer.model}}
            />
          </span>

          <div class="save-or-cancel">
            <ComposerSaveButton
              @action={{this.composer.saveAction}}
              @icon={{this.composer.saveIcon}}
              @label={{this.composer.saveLabel}}
              @forwardEvent={{true}}
              @disableSubmit={{this.composer.disableSubmit}}
            />

            {{#if this.site.mobileView}}
              <a
                href
                {{on "click" this.composer.cancel}}
                title={{i18n "cancel"}}
                class="cancel"
              >
                {{#if this.composer.canEdit}}
                  {{d-icon "times"}}
                {{else}}
                  {{d-icon "far-trash-alt"}}
                {{/if}}
              </a>
            {{else}}
              <a
                href
                {{on "click" this.composer.cancel}}
                class="cancel"
                role="button"
              >{{i18n "close"}}</a>
            {{/if}}

            {{#if this.site.mobileView}}
              {{#if this.composer.whisperOrUnlistTopic}}
                <span class="whisper">
                  {{d-icon "far-eye-slash"}}
                </span>
              {{/if}}

              {{#if this.composer.model.noBump}}
                <span class="no-bump">{{d-icon "anchor"}}</span>
              {{/if}}
            {{/if}}

            <span>
              <PluginOutlet
                @name="composer-after-save-or-cancel"
                @outletArgs={{hash model=this.composer.model}}
              />
            </span>
          </div>

          {{#if this.site.mobileView}}
            <span>
              <PluginOutlet
                @name="composer-mobile-buttons-bottom"
                @outletArgs={{hash model=this.composer.model}}
              />
            </span>

            {{#if this.composer.allowUpload}}
              <a
                id="mobile-file-upload"
                class="btn btn-default no-text mobile-file-upload
                  {{if this.composer.isUploading 'hidden'}}"
                aria-label={{i18n "composer.upload_title"}}
              >
                {{d-icon this.composer.uploadIcon}}
              </a>
            {{/if}}

            <a
              href
              class="btn btn-default no-text mobile-preview"
              title={{i18n "composer.show_preview"}}
              {{on "click" this.composer.togglePreview}}
              aria-label={{i18n "preview"}}
            >
              {{d-icon "desktop"}}
            </a>

            {{#if this.composer.showPreview}}
              <DButton
                @action={{this.composer.togglePreview}}
                @ariaLabel="composer.hide_preview"
                @icon="pencil-alt"
                class="hide-preview"
              />
            {{/if}}
          {{/if}}

          {{#if
            (or this.composer.isUploading this.composer.isProcessingUpload)
          }}
            <div id="file-uploading">
              {{#if this.composer.isProcessingUpload}}
                {{loading-spinner size="small"}}<span>{{i18n
                    "upload_selector.processing"
                  }}</span>
              {{else}}
                {{loading-spinner size="small"}}<span>{{i18n
                    "upload_selector.uploading"
                  }}
                  {{this.composer.uploadProgress}}%</span>
              {{/if}}

              {{#if this.composer.isCancellable}}
                <a
                  href
                  id="cancel-file-upload"
                  {{on "click" this.composer.cancelUpload}}
                >{{d-icon "times"}}</a>
              {{/if}}
            </div>
          {{/if}}

          <div
            class={{if this.composer.isUploading "hidden"}}
            id="draft-status"
          >
            {{#if this.composer.model.draftStatus}}
              <span
                class="draft-error"
                title={{this.composer.model.draftStatus}}
              >
                {{#if this.composer.model.draftConflictUser}}
                  {{avatar
                    this.composer.model.draftConflictUser
                    imageSize="small"
                  }}
                  {{d-icon "user-edit"}}
                {{else}}
                  {{d-icon "exclamation-triangle"}}
                {{/if}}
                {{#if this.site.desktopView}}
                  {{this.composer.model.draftStatus}}
                {{/if}}
              </span>
            {{/if}}
          </div>

          {{#if this.site.desktopView}}
            <DButton
              @action={{this.composer.togglePreview}}
              @translatedTitle={{this.composer.toggleText}}
              @icon="angle-double-left"
              class={{concat-class
                "btn-transparent btn-mini-toggle toggle-preview"
                (unless this.composer.showPreview "active")
              }}
            />
          {{/if}}
        </div>
      </div>
    {{else}}
      <div class="saving-text">
        {{#if this.composer.model.createdPost}}
          {{i18n "composer.saved"}}
          <a
            href={{this.composer.createdPost.url}}
            {{on "click" this.composer.viewNewReply}}
            class="permalink"
          >{{i18n "composer.view_new_post"}}</a>
        {{else}}
          {{i18n "composer.saving"}}
          {{loading-spinner size="small"}}
        {{/if}}
      </div>

      <div class="draft-text">
        {{#if this.composer.model.topic}}
          {{d-icon "share"}}
          {{html-safe this.composer.draftTitle}}
        {{else}}
          {{i18n "composer.saved_draft"}}
        {{/if}}
      </div>

      <ComposerToggles
        @composeState={{this.composer.model.composeState}}
        @toggleFullscreen={{this.composer.openIfDraft}}
        @toggleComposer={{this.composer.toggle}}
        @toggleToolbar={{this.composer.toggleToolbar}}
      />
    {{/if}}
  {{/if}}
</ComposerBody>